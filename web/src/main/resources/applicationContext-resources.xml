<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
       ">

    <context:property-placeholder location="classpath:mail.properties,classpath:jdbc.properties"/>

    <!-- 数据库 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="connectionProperties" value="useUnicode=true;characterEncoding=utf-8;autoReconnect=true;"/>
        <property name="maxActive" value="10"/>
        <property name="maxWait" value="1000"/>
        <property name="poolPreparedStatements" value="true"/>
        <property name="defaultAutoCommit" value="true"/>

        <!-- 对一些作废的连接要进行强制回收 -->
        <property name="logAbandoned" value="true"/>
        <property name="removeAbandoned" value="true"/> <!-- 是否自动回收超时连接 -->
        <property name="removeAbandonedTimeout" value="180"/><!-- 超时时间: 3m -->

        <!-- 空闲时是否验证, 若没通过验证则断掉连接 -->
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="true"/>
        <property name="validationQuery" value="select 1"/>
        <property name="minEvictableIdleTimeMillis" value="600000"/> <!-- 池中对象最长空闲时间: 10m (缺省30m) -->
        <property name="timeBetweenEvictionRunsMillis" value="900000"/> <!-- 空闲回收器每次检查的间隔时间: 15m -->

    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 语言、风格 -->
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basenames">
            <array>
                <value>messages</value>
                <value>ApplicationResources</value>
            </array>
        </property>
        <property name="useCodeAsDefaultMessage" value="true"/>
    </bean>

    <bean id="icmLicenseFuncRepository" class="cn.mailtech.ssh.common.dao.msgsrc.EnumInfoMessageSourceRepository">
        <constructor-arg name="prefix" value="enum.icm.license.func"/>
        <constructor-arg name="messages" ref="messageSource"/>
    </bean>
    <bean id="icmLicenseStatusRepository" class="cn.mailtech.ssh.common.dao.msgsrc.EnumInfoMessageSourceRepository">
        <constructor-arg name="prefix" value="enum.icm.license.status"/>
        <constructor-arg name="messages" ref="messageSource"/>
    </bean>
    <bean id="serviceMirrorRegionCodes" class="cn.mailtech.ssh.common.dao.msgsrc.EnumInfoMessageSourceRepository">
        <constructor-arg name="prefix" value="enum.service.mirror.region_code"/>
        <constructor-arg name="messages" ref="messageSource"/>
    </bean>

</beans>

